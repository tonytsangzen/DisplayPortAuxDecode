cmake_minimum_required(VERSION 3.12)

# Pull in SDK (must be before project)
include(pico_sdk_import.cmake)

project(auxDecode)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

if (PICO_SDK_VERSION_STRING VERSION_LESS "1.3.0")
    message(FATAL_ERROR "Raspberry Pi Pico SDK version 1.3.0 (or later) required. Your version is ${PICO_SDK_VERSION_STRING}")
endif()

# Initialize the SDK
pico_sdk_init()

add_definitions("-DPICO_BUILD")
add_compile_options(-Wall
        -Wno-format          # int != int32_t as far as the compiler is concerned because gcc has int32_t as long int
        -Wno-unused-function # we have some for the docs that aren't called
        -Wno-maybe-uninitialized
        )

file(GLOB_RECURSE SRC ../src/*.c)


add_executable(auxDecode
			${SRC}
			aux_pio.c
			main.c
        )

pico_generate_pio_header(auxDecode ${CMAKE_CURRENT_LIST_DIR}/aux.pio)

# pull in common dependencies
target_link_libraries(auxDecode pico_stdlib hardware_pio)

target_include_directories(auxDecode PRIVATE ../src/)

# create map/bin/hex file etc.
pico_add_extra_outputs(auxDecode)


pico_enable_stdio_usb(auxDecode 1)
pico_enable_stdio_uart(auxDecode 0)


