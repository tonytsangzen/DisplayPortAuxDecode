cmake_minimum_required(VERSION 3.20)

# initialize the SDK based on PICO_SDK_PATH
# note: this must happen before project()
include(pico_sdk_import.cmake)

project(auxDecode C CXX ASM)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
if (PICO_SDK_VERSION_STRING VERSION_LESS "1.3.0")
    message(FATAL_ERROR "Raspberry Pi Pico SDK version 1.3.0 (or later) required. Your version is ${PICO_SDK_VERSION_STRING}")
endif()

# initialize the Raspberry Pi Pico SDK
pico_sdk_init()

if (TARGET tinyusb_device)
    add_executable(auxDecode
            main.c
            )

    # pull in common dependencies
    target_link_libraries(auxDecode pico_stdlib)

    # enable usb output, disable uart output
    pico_enable_stdio_usb(auxDecode 1)
    pico_enable_stdio_uart(auxDecode 0)

    # create map/bin/hex/uf2 file etc.
    pico_add_extra_outputs(auxDecode)

elseif(PICO_ON_DEVICE)
    message(WARNING "not building auxDecode because TinyUSB submodule is not initialized in the SDK")
endif()
